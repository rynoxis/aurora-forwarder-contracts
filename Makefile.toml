[config]
default_to_workspace = false
skip_core_tasks = true

[env]
TARGET = "wasm32-unknown-unknown"
FWD_WASM_FILE = "aurora-forwarder.wasm"
FWD_FACTORY_WASM_FILE = "aurora-forwarder-factory.wasm"
FEES_WASM_FILE = "aurora-forward-fees.wasm"

[tasks.build]
dependencies = [
    "build-contracts",
    "cp-contracts",
    "optimize-contracts",
    "build-factory",
    "cp-factory",
    "contract-stats"
]

[tasks.clippy]
command = "cargo"
dependencies = [
    "build-contracts",
    "cp-contracts",
]
args = [
    "clippy",
    "--workspace",
    "--all-targets"
]

[tasks.test]
alias = "tests"

[tasks.tests]
command = "cargo"
dependencies = [
    "build"
]
args = [
    "test",
    "--all-targets"
]

[tasks.build-contracts]
command = "cargo"
env = { "RUSTFLAGS" = "-C link-arg=-s" }
args = [
    "build",
    "--target",
    "${TARGET}",
    "--release",
    "--workspace",
    "--exclude",
    "aurora-forwarder-tests",
    "--exclude",
    "aurora-forwarder-factory"
]

[tasks.optimize-contracts]
dependencies = ["download-wasm-opt"]
script = '''
   filesize_before=$(wc -c res/${FWD_WASM_FILE} | awk '{print $1}')
   res/binaryen/bin/wasm-opt -O4 res/${FWD_WASM_FILE} -o res/${FWD_WASM_FILE} --strip-debug --vacuum
   filesize_after=$(wc -c res/${FWD_WASM_FILE} | awk '{print $1}')
   echo "File size before: [$filesize_before] and after: [$filesize_after]"
 '''

[tasks.download-wasm-opt]
script_runner = "bash"
script = '''
if [[ ! -f res/binaryen/bin/wasm-opt ]]; then
  mkdir -p res/binaryen

  if [[ "$OSTYPE" == "darwin"* ]]; then
    if [[ $(uname -m) == "arm64" ]]; then
      os="arm64-macos"
    else
      os="x86_64-macos"
    fi
  elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
    if [[ $(uname -m) == "x86_64" ]]; then
      os="x86_64-linux"
    else
      os="aarch64-linux"
    fi
  else
     exit 1
  fi

  curl -sL https://github.com/WebAssembly/binaryen/releases/download/version_117/binaryen-version_117-${os}.tar.gz | tar -xz -C res/binaryen
  mv res/binaryen/binaryen-version_117/bin res/binaryen
  mv res/binaryen/binaryen-version_117/lib res/binaryen
  rm -rf res/binaryen/binaryen-version_117
fi
'''

[tasks.build-factory]
command = "cargo"
env = { "RUSTFLAGS" = "-C link-arg=-s" }
args = [
    "build",
    "--target",
    "${TARGET}",
    "--release",
    "-p",
    "aurora-forwarder-factory"
]

[tasks.cp-contracts]
script = """
cp target/${TARGET}/release/aurora_forwarder.wasm res/${FWD_WASM_FILE}
cp target/${TARGET}/release/aurora_forward_fees.wasm res/${FEES_WASM_FILE}
"""

[tasks.cp-factory]
script = """
cp target/${TARGET}/release/aurora_forwarder_factory.wasm res/${FWD_FACTORY_WASM_FILE}
"""

[tasks.clean]
dependencies = ["rm-contracts"]
command = "cargo"
args = ["clean"]

[tasks.rm-contracts]
script = "rm -rf res/${FWD_WASM_FILE} res/${FEES_WASM_FILE} res/${FWD_FACTORY_WASM_FILE} res/binaryen"

[tasks.contract-stats]
category = "Tools"
script = '''
echo "Environment:"
echo "    CARGO_MAKE_PROFILE:   ${CARGO_MAKE_PROFILE}"
echo "    CARGO_FEATURES:       ${CARGO_FEATURES}"
echo "    FWD_FILE:             ${FWD_WASM_FILE}"
echo "    FWD_SIZE_FILE:        $(wc -c res/${FWD_WASM_FILE} | awk '{print $1}')"
echo "    FACTORY_FILE:         ${FWD_FACTORY_WASM_FILE}"
echo "    FACTORY_SIZE_FILE:    $(wc -c res/${FWD_FACTORY_WASM_FILE} | awk '{print $1}')"
echo "    FEES_FILE:            ${FEES_WASM_FILE}"
echo "    FEES_SIZE_FILE:       $(wc -c res/${FEES_WASM_FILE} | awk '{print $1}')"
echo "    TARGET_DIR:           ${TARGET_DIR}"
echo "    RUSTFLAGS:            ${RUSTFLAGS}"
echo "    Extra build args:     ${RELEASE} ${@}"
'''
